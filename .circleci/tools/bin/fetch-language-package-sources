#!/usr/bin/env php
<?php

declare(strict_types = 1);

require __DIR__ . '/../vendor/autoload.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;


(new Application(
    'fetch-language-package-sources',
    (function (): string {
        return json_decode(
                file_get_contents(__DIR__ . '/../composer.json'),
                true
            )['version'] ?? 'UNKNOWN';
    })()
))
    ->register('fetch-language-package-source')
    ->addArgument(
        'origin',
        InputArgument::REQUIRED,
        'Package repository URL.'
    )
    ->addArgument(
        'output',
        InputArgument::REQUIRED,
        'Directory where generate language package.'
    )
    ->setCode(function(InputInterface $input, OutputInterface $output) {
        $origin = $input->getArgument('origin');
        $dir = $input->getArgument('output');

        if (file_exists($dir)) {
            if (!is_empty_dir($dir)) {
                throw new \InvalidArgumentException(sprintf(
                    'Provided path "%s" cannot be used as output as is not directory or not empty.',
                    $dir
                ));
            }
        }

        passthru(sprintf(
                'git clone --depth 1 -- %s %s',
                $origin,
                $dir
            ),
            $status
        );
        return $status;
    })
    ->getApplication()
    ->setDefaultCommand('fetch-language-package-sources', true)
    ->run();

function is_empty_dir(string $dir): bool
{
    if (!is_dir($dir)) {
        return false;
    }

    if (count(scandir($dir)) > 2) { // . and .. present always
        return false;
    }

    return true;
}
